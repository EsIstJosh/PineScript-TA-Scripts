//@version=4
// Copyright (c) 2019-present, Franklin Moormann (cheatcountry)
// Square Root Weighted Moving Average [CC] script may be freely distributed under the MIT license.
study("Square Root Weighted Moving Average [CC]", overlay=true)

inp = input(title="Source", type=input.source, defval=close)
res = input(title="Resolution", type=input.resolution, defval="")
rep = input(title="Allow Repainting?", type=input.bool, defval=false)
bar = input(title="Allow Bar Color Change?", type=input.bool, defval=true)
src1 = security(syminfo.tickerid, res, inp[rep ? 0 : barstate.isrealtime ? 1 : 0])[rep ? 0 : barstate.isrealtime ? 0 : 1]
src2 = security(syminfo.tickerid, res, inp[rep ? 0 : barstate.isrealtime ? 1 : 0])[rep ? 0 : barstate.isrealtime ? 0 : 1]

length1 = input(title="Length1", type=input.integer, defval=100)
length2 = input(title="Length2", type=input.integer, defval=32)
sum1 = 0.0, weightSum1 = 0.0
sum2 = 0.0, weightSum2 = 0.0
for i = 0 to length1 - 1
    weight1 = pow(length1 - i, 0.5)
    sum1 := sum1 + (src1[i] * weight1)
    weightSum1 := weightSum1 + weight1
srwma1 = sum1 / weightSum1

for i = 0 to length2 - 1
    weight2 = pow(length2 - i, 0.5)
    sum2 := sum2 + (src2[i] * weight2)
    weightSum2 := weightSum2 + weight2
srwma2 = sum2 / weightSum2

sig1 = src1 > srwma1 ? 1 : src1 < srwma1 ? -1 : 0
sig2 = src2 > srwma2 ? 1 : src2 < srwma2 ? -1 : 0
alertcondition(crossover(sig1, 0), "Buy Signal", "Bullish Change Detected")
alertcondition(crossunder(sig1, 0), "Sell Signal", "Bearish Change Detected")
alertcondition(crossover(sig2, 0), "Buy Signal", "Bullish Change Detected")
alertcondition(crossunder(sig2, 0), "Sell Signal", "Bearish Change Detected")
srwmaColor1 = sig1 > 0 ? color.green : sig1 < 0 ? color.red : color.black
srwmaColor2 = sig2 > 0 ? color.blue : sig2 < 0 ? color.orange : color.black
length3 = input(title="Length", minval=1, defval=12)
src3 = input(title="Source", defval=close)

rms(src3, length3) =>
	sqrt(sum(src3 * src3, length3) / length3)
colorrms = rms(src3,length3) > srwma2 ?color.lime:color.maroon
plot(rms(src3, length3), title="RMS", linewidth=2, color=colorrms, transp=0)

barcolor(bar ? srwmaColor1 : na)

alpha1 = input(title="Alpha 1", step=0.1, defval=0.25)
alpha2 = input(title="Alpha 2", step=0.1, defval=0.33)
src4 = input(title="Source",defval=hl2)

lead = 0.0
lead := 2 * src4 + (alpha1 - 2) * nz(src4[1]) + (1 - alpha1) * nz(lead[1])

leadingIndicator = 0.0
leadingIndicator := alpha2 * lead + (1 - alpha2) * nz(leadingIndicator[1])
leadingcolor=leadingIndicator>(srwma2+rms(src3,length3))/2?color.lime:color.orange
plot(leadingIndicator, title="ELI", linewidth=2, color=leadingcolor, transp=0)


plot(srwma1, title="SRWMA", linewidth=2, color=srwmaColor1)
plot(srwma2, title="SRWMA", linewidth=2, color=srwmaColor2)



plotshape(crossover(srwma2,(rms(src3,length3))[0]),style=shape.xcross, color=#ff0000,location=location.abovebar)
plotshape(crossunder(srwma2,(rms(src3,length3))[0]),style=shape.xcross, color=color.lime,location=location.belowbar)
plotshape(crossover(leadingIndicator,(srwma2+rms(src3,length3))/2),style=shape.xcross, color=#ff0000,location=location.abovebar)
plotshape(crossunder(leadingIndicator,(srwma2+rms(src3,length3))/2),style=shape.xcross, color=color.lime,location=location.belowbar)